### Logging ###
logging.level.root=info

### server ###
server.servlet.context-path=/sam-menu/api
server.port=9073

jwt.secret={bcrypt}$sam!
jwt.expiration.milliseconds=36000000

spring.jpa.database=default

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://10.1.218.10:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
sam.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#It is useful because from Spring Boot 2.1 and above bean overriding is disabled by default
spring.main.allow-bean-definition-overriding=true

spring.jpa.open-in-view=false

spring.cache.type=redis
spring.redis.host=10.0.120.73
spring.redis.port=6379
